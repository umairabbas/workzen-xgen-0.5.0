## pojo.vm
## Brad Matlack 3-2002
## XGen pojo template
##############################################################
#set( $pkg = $model )
#set( $tablename = $bean.getTableName() )
#set( $classname = $bean.getName() )
#set( $columns   = $bean.getSqlColumnsAsCSV() )
#set( $pkField = $bean.getPrimaryKey() )
#set( $tkField = $bean.getTransactionKey() )
#set( $packageName = $pkg.getName() ) 
##############################################################
/*
 * ${classname}.java
 * Generated by XGen using $templatePath/$template
 * $now
 * package: $model.getName()
 */
package $packageName;

import java.util.*;
#if( $bean.hasImports() )
import $bean.getImports();
#end

/**
 * $bean.getDescription()
 * @author $bean.Author
 */
#if( $bean.hasSuperclass() )
public class $classname extends $bean.getSuperclass(){
#else
public class $classname {
#end 
#set( $fields = $bean.getFields() )
#set($references = $bean.getReferences())
#set($collections = $bean.getCollections())
#foreach( $field in $fields )
#set( $type = $field.getType().getName() )
#if( $type.equals("Date") || $type.equals("Time") || $type.equals("Timestamp") )	
  protected Date $field.Name;
#elseif( $type.equals("Blob") )
  protected byte[] $field.Name;
#elseif( $type.equals("Clob") )
  protected char[] $field.Name;
#elseif( $type.equals("String") )
  protected $type $field.getName();
#elseif( $field.isPrimitive() )
  protected $field.getPrimitiveType() $field.getName();
#else
  protected $type $field.getName();
#end
#end
#foreach( $ref in $references )
  protected $ref.getClassname() $ref.getName() = null;
#end
#foreach( $kol in $collections )
  protected $kol.getTypename() $kol.getName() = new $kol.getTypename()();
#end

#foreach( $field in $fields )
#set ($type = $field.getType().getName() )
  /** */
#if( $type.equals("Date") || $type.equals("Time") || $type.equals("Timestamp") )
  public void set$field.getCapName() ( java.util.Date value ){ 
  	this.$field.getName() = value; 
  }
  public java.util.Date get$field.getCapName() ( ){ 
  	return $field.getName(); 
  }
#elseif( $type.equals("String") )
  public void set$field.getCapName() ( String value ) { 
  	this.$field.getName() = value; 
  }
  public $type get$field.getCapName() ( ){ 
  	return $field.getName(); 
  }	
#elseif( $type.equals("Blob") )
  public void set$field.getCapName() ( byte[] value ){ 
  	this.$field.getName() = value; 
  }
  public byte[] get$field.getCapName() (){ 
  	return $field.Name; 
  }
#elseif( $type.equals("Clob") )
  public void set$field.getCapName() ( char[] value ){ 
  	this.$field.getName() = value; 
  }
  public char[] get$field.getCapName() (){ 
  	return $field.Name; 
  }
#elseif( $field.isPrimitive() )
  public void set$field.getCapName() ( $field.getPrimitiveType() value ) { 
  	this.$field.getName() = value; 
  }
  public $field.getPrimitiveType() get$field.getCapName() ( ){ 
  	return $field.getName(); 
  }
#else
  public void set$field.getCapName() ( $type value ) { 
  	this.$field.getName() = value; 
  }
  public void set$field.getCapName() ( $field.getType().getPrimitiveName() value ){ 
  	this.$field.getName() = new $type (value); 
  }
  public $type get$field.getCapName() ( ){ 
  	return $field.getName(); 
  }
#end

#end
#foreach( $ref in $references )
#set( $refBean = $pkg.getClassByName($ref.getClassname()) )
#set( $refKey = $refBean.getPrimaryKey() )
  /** */
  public void set$ref.getCapName() ( $ref.getClassname() ref ) {
  	if( ref != null ){ 
	  	this.$ref.getName() = ref; 
  		this.$ref.getKey() = ref.$refKey.getAttributeGetter()(); 
  	}
  }
  public $ref.getClassname() get$ref.getCapName() ( ){ 
  	return $ref.getName(); 
  }
  public boolean has$ref.getCapName()( ){
  	return ($ref.getName() != null);
  }
  
#end
#foreach( $kol in $collections )
  /** */
  public void set$kol.getCapName() ( $kol.getTypename() collection ) { 
  	this.$kol.getName() = collection; 
  }
  public $kol.getTypename() get$kol.getCapName() ( ){ 
  	return $kol.getName(); 
  }
  public void add$kol.getCapName()Item ( $kol.getClassname() item ) { 
  	${kol.getName()}.add(item); 
  }
  public boolean has$kol.getCapName()( ){
  	return (${kol.getName()}.size() > 0);
  }
  
#end
  /** 
   * to String 
   */
  public String toString(){
    return getDataMap().toString();
  }

  /** 
   * Get the object as a map of key-value pairs
   */
  public HashMap getDataMap(){
    HashMap map = new HashMap();
#foreach( $field in $fields )
#set($typename = $field.getTypename() )
#if( ($typename.equals("Blob"))||($typename.equals("Clob")) )
    map.put("$field.getName()", new String( $field.getAttributeGetter()() ) );
#elseif ($field.isPrimitive())
    map.put("$field.getName()", "" + $field.getAttributeGetter()() );
#else
    map.put("$field.getName()", $field.getAttributeGetter()() );
#end
#end
#foreach( $ref in $references )
	map.put("has$ref.getCapName()", "" + has$ref.getCapName()());
#end
#foreach( $kol in $collections )
    map.put("$kol.getName() size", "" + ${kol.getName()}.size());
#end
    return map;
  }
 
}




