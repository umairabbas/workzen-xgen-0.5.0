<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.daimi.au.dk/~dbuser/db2hs/java/picinj.htm -->
<HTML><HEAD><TITLE>PicIn.java: DB2 Sample</TITLE>
<META http-equiv=Content-Type content="text/html; charset=windows-1252">
<META content="MSHTML 6.00.2600.0" name=GENERATOR></HEAD>
<BODY bgColor=#ffffff><PRE><!-- Created: Tue May 11 12:44:05 1999 by htmlsamp version 1.1.2 -->
<!-- START: PicIn.java in HTML -->
//
<FONT color=#006633 size=+1>//   Source File Name: <A href="http://www.daimi.au.dk/~dbuser/db2hs/java/picinj.htm">PicIn.java</A>  1.3 </FONT>
<FONT color=#006633 size=+1>//  </FONT>
<FONT color=#006633 size=+1>//   Licensed Materials -- Property of IBM </FONT>
<FONT color=#006633 size=+1>//  </FONT>
<FONT color=#006633 size=+1>//   <FONT size=+1><B>(</B></FONT>c<FONT size=+1><B>)</B></FONT> Copyright International Business Machines Corporation, 1999. </FONT>
<FONT color=#006633 size=+1>//       All Rights Reserved. </FONT>
<FONT color=#006633 size=+1>//  </FONT>
<FONT color=#006633 size=+1>//   US Government Users Restricted Rights - </FONT>
<FONT color=#006633 size=+1>//   Use, duplication or disclosure restricted by </FONT>
<FONT color=#006633 size=+1>//   GSA ADP Schedule Contract with IBM Corp. </FONT>
<FONT color=#006633 size=+1>//  </FONT>
<FONT color=#006633 size=+1>//     PURPOSE : </FONT>
<FONT color=#006633 size=+1>//        Loads a BLOB <FONT size=+1><B>(</B></FONT>Binary Large Object<FONT size=+1><B>)</B></FONT> into the database using file </FONT>
<FONT color=#006633 size=+1>//        input. </FONT>
<FONT color=#006633 size=+1>//     PREREQUISITE: </FONT>
<FONT color=#006633 size=+1>//      1.  Run showpic to generate a BLOB picture file in the format used  </FONT>
<FONT color=#006633 size=+1>//          by your platform. If you request a bitmap format for employee </FONT>
<FONT color=#006633 size=+1>//          number 000130, for example, showpic will generate a file called  </FONT>
<FONT color=#006633 size=+1>//          <FONT color=#000099>"P000130.bmp"</FONT>. </FONT>
<FONT color=#006633 size=+1>//      2.  Run picin. </FONT>
<FONT color=#006633 size=+1>//      3.  At the <FONT color=#000099>"Enter an employee number"</FONT> prompt, enter an existing  </FONT>
<FONT color=#006633 size=+1>//          employee number, where a picture does not already exist for  </FONT>
<FONT color=#006633 size=+1>//          that employee--for example, 000160. </FONT>
<FONT color=#006633 size=+1>//      4.  At the <FONT color=#000099>"Which Picture Format"</FONT> prompt, enter the format applicable </FONT>
<FONT color=#006633 size=+1>//          for your platform. For example, on Windows 32-bit operating  </FONT>
<FONT color=#006633 size=+1>//          systems, enter <FONT color=#000099>"bitmap"</FONT>. </FONT>
<FONT color=#006633 size=+1>//      5.  At the <FONT color=#000099>"Enter the filename..."</FONT> prompt, enter the filename for  </FONT>
<FONT color=#006633 size=+1>//          the picture generated by showpic. If you followed the example </FONT>
<FONT color=#006633 size=+1>//          described in step 1, enter <FONT color=#000099>"P000130.bmp"</FONT>. </FONT>

<FONT color=#006633 size=+1>//  For more information about this sample, refer to the <A href="http://www.daimi.au.dk/~dbuser/db2hs/java/readme.htm">README</A> file. </FONT>

<FONT color=#006633 size=+1>//  For more information on <A href="http://www.daimi.au.dk/~dbuser/db2a0/java.htm">Programming in Java</A>, refer to the  </FONT>
<FONT color=#006633 size=+1>//  <FONT color=#000099>"<A href="http://www.daimi.au.dk/~dbuser/db2a0/java.htm">Programming in Java</A>"</FONT> section of the <A href="http://www.daimi.au.dk/~dbuser/db2a0/index.htm#ToC">Application Development Guide</A>. </FONT>

<FONT color=#006633 size=+1>//  For more information on building and running Java programs for DB2, </FONT>
<FONT color=#006633 size=+1>//  refer to the <FONT color=#000099>"<A href="http://www.daimi.au.dk/~dbuser/db2ax/java.htm">Building Java Applets and Applications</A>"</FONT> section of the  </FONT>
<FONT color=#006633 size=+1>//  <A href="http://www.daimi.au.dk/~dbuser/db2ax/index.htm#ToC">Application Building Guide</A>. </FONT>

<FONT color=#006633 size=+1>//  For more information on the SQL language, refer to the <A href="http://www.daimi.au.dk/~dbuser/db2s0/index.htm#ToC">SQL Reference</A>. </FONT>

import java.io.*;
import java.lang.*;
import java.sql.*;

class PicIn {

   static {
      try {
         <FONT color=#006633 size=+1>//  register the driver with DriverManager </FONT>
         <FONT color=#006633 size=+1>//  The newInstance<FONT size=+1><B>(</B></FONT><FONT size=+1><B>)</B></FONT> call is needed for the sample to work with </FONT>
         <FONT color=#006633 size=+1>//  JDK 1.1.1 on OS/2, where the Class.forName<FONT size=+1><B>(</B></FONT><FONT size=+1><B>)</B></FONT> method does not </FONT>
         <FONT color=#006633 size=+1>//  run the static initializer. For other JDKs, the newInstance </FONT>
         <FONT color=#006633 size=+1>//  call can be omitted. </FONT>
         Class.forName<FONT size=+1><B>(</B></FONT><FONT color=#000099>"COM.ibm.db2.jdbc.app.DB2Driver"</FONT><FONT size=+1><B>)</B></FONT>.newInstance<FONT size=+1><B>(</B></FONT><FONT size=+1><B>)</B></FONT>;
      } catch <FONT size=+1><B>(</B></FONT>Exception e<FONT size=+1><B>)</B></FONT> {
         e.printStackTrace<FONT size=+1><B>(</B></FONT><FONT size=+1><B>)</B></FONT>;
      }
   }

   public static void main <FONT size=+1><B>(</B></FONT>String<FONT size=+1><B>[</B></FONT><FONT size=+1><B>]</B></FONT> argv<FONT size=+1><B>)</B></FONT> {
      Connection con = null;

      try {
         <FONT color=#006633 size=+1>//  connect and do not auto commit </FONT>
         if <FONT size=+1><B>(</B></FONT>argv.length == 3<FONT size=+1><B>)</B></FONT>
         {  <FONT color=#006633 size=+1>//  connect using command line arguments </FONT>
            con = Tools.DBConnect<FONT size=+1><B>(</B></FONT>argv<FONT size=+1><B>[</B></FONT>0<FONT size=+1><B>]</B></FONT>, argv<FONT size=+1><B>[</B></FONT>1<FONT size=+1><B>]</B></FONT>, argv<FONT size=+1><B>[</B></FONT>2<FONT size=+1><B>]</B></FONT><FONT size=+1><B>)</B></FONT>; 
         }
         else
         {  <FONT color=#006633 size=+1>//  prompt user for database name, user ID, password </FONT>
            con = Tools.DBConnect<FONT size=+1><B>(</B></FONT><FONT size=+1><B>)</B></FONT>; 
         }
         con.setAutoCommit <FONT size=+1><B>(</B></FONT>false<FONT size=+1><B>)</B></FONT>;
         <FONT color=#006633 size=+1>//  note the picture will ne no longer than 100 kB </FONT>
         int MAX_FILE_SIZE = 102400;

         <FONT color=#006633 size=+1>//  ask user for information to insert picture </FONT>
         System.out.println <FONT size=+1><B>(</B></FONT><FONT color=#000099>"Enter the Employee Number:"</FONT><FONT size=+1><B>)</B></FONT>;
         String empNo = Tools.readString<FONT size=+1><B>(</B></FONT><FONT size=+1><B>)</B></FONT>;
         String picFormat = readPicFormat<FONT size=+1><B>(</B></FONT><FONT size=+1><B>)</B></FONT>;
         System.out.println <FONT size=+1><B>(</B></FONT><FONT color=#000099>"Enter the filename of the Photo of type "</FONT> + picFormat<FONT size=+1><B>)</B></FONT>;
         String fileName = Tools.readString<FONT size=+1><B>(</B></FONT><FONT size=+1><B>)</B></FONT>;
         FileInputStream fis = new FileInputStream <FONT size=+1><B>(</B></FONT>fileName<FONT size=+1><B>)</B></FONT>;

         insertPicture <FONT size=+1><B>(</B></FONT>con, empNo, picFormat, fis, MAX_FILE_SIZE<FONT size=+1><B>)</B></FONT>;

         <FONT color=#006633 size=+1>//  disconnect and commit transactions </FONT>
         System.out.println <FONT size=+1><B>(</B></FONT><FONT color=#000099>"<B>\n</B>&gt;Disconnecting..."</FONT><FONT size=+1><B>)</B></FONT>;
         con.commit<FONT size=+1><B>(</B></FONT><FONT size=+1><B>)</B></FONT>;
         con.close<FONT size=+1><B>(</B></FONT><FONT size=+1><B>)</B></FONT>;
      } catch <FONT size=+1><B>(</B></FONT>Exception e<FONT size=+1><B>)</B></FONT> { e.printStackTrace<FONT size=+1><B>(</B></FONT><FONT size=+1><B>)</B></FONT>; }
   }

   <FONT color=#006633 size=+1>//  </FONT>
   <FONT color=#006633 size=+1>//  insertPicture </FONT>
   <FONT color=#006633 size=+1>//     - uses a prepared statement to insert a blob in table emp_photo </FONT>
   <FONT color=#006633 size=+1>//  </FONT>

   public static void insertPicture <FONT size=+1><B>(</B></FONT>Connection con, String empNo, String picFormat, FileInputStream fis, int maxFileSize<FONT size=+1><B>)</B></FONT> {
      try {
         PreparedStatement pstmt = con.prepareStatement<FONT size=+1><B>(</B></FONT><FONT color=#000099>"INSERT INTO emp_photo <FONT size=+1><B>(</B></FONT>empno, photo_format, picture<FONT size=+1><B>)</B></FONT> "</FONT> +
            <FONT color=#000099>"VALUES <FONT size=+1><B>(</B></FONT>?, ?, ?<FONT size=+1><B>)</B></FONT>"</FONT><FONT size=+1><B>)</B></FONT>;
         <FONT color=#006633 size=+1>//  provide values for prepared statement and execute update </FONT>
         pstmt.setString <FONT size=+1><B>(</B></FONT>1, empNo<FONT size=+1><B>)</B></FONT>;
         pstmt.setString <FONT size=+1><B>(</B></FONT>2, picFormat<FONT size=+1><B>)</B></FONT>;
         pstmt.setBinaryStream <FONT size=+1><B>(</B></FONT>3, fis, maxFileSize<FONT size=+1><B>)</B></FONT>;
         pstmt.executeUpdate<FONT size=+1><B>(</B></FONT><FONT size=+1><B>)</B></FONT>;
         pstmt.close<FONT size=+1><B>(</B></FONT><FONT size=+1><B>)</B></FONT>;
      } catch <FONT size=+1><B>(</B></FONT>Exception e<FONT size=+1><B>)</B></FONT> { e.printStackTrace<FONT size=+1><B>(</B></FONT><FONT size=+1><B>)</B></FONT>; }
   }

   <FONT color=#006633 size=+1>//  </FONT>
   <FONT color=#006633 size=+1>//  readPicFormat </FONT>
   <FONT color=#006633 size=+1>//     - asks user to enter a picture format and continues until format is     */</FONT> </FONT>
   <FONT color=#006633 size=+1>//       valid </FONT>
   <FONT color=#006633 size=+1>//  </FONT>

   public static String readPicFormat <FONT size=+1><B>(</B></FONT><FONT size=+1><B>)</B></FONT> {
      String picFormat = new String<FONT size=+1><B>(</B></FONT><FONT color=#000099>""</FONT><FONT size=+1><B>)</B></FONT>;
      try {
        boolean correctFormat = false;
         while <FONT size=+1><B>(</B></FONT>!correctFormat<FONT size=+1><B>)</B></FONT> {
            System.out.println <FONT size=+1><B>(</B></FONT><FONT color=#000099>"Which Picture Format <FONT size=+1><B>[</B></FONT>xwd <FONT size=+1><B>(</B></FONT>XWindows<FONT size=+1><B>)</B></FONT>, bitmap<FONT size=+1><B>]</B></FONT>?"</FONT><FONT size=+1><B>)</B></FONT>;
            picFormat = Tools.readString<FONT size=+1><B>(</B></FONT><FONT size=+1><B>)</B></FONT>.toLowerCase<FONT size=+1><B>(</B></FONT><FONT size=+1><B>)</B></FONT>;
            if <FONT size=+1><B>(</B></FONT> picFormat.equals <FONT size=+1><B>(</B></FONT><FONT color=#000099>"bitmap"</FONT><FONT size=+1><B>)</B></FONT> || picFormat.equals <FONT size=+1><B>(</B></FONT><FONT color=#000099>"xwd"</FONT><FONT size=+1><B>)</B></FONT> <FONT size=+1><B>)</B></FONT> { correctFormat = true; }
            else { System.out.println <FONT size=+1><B>(</B></FONT><FONT color=#000099>"Invalid Format!"</FONT><FONT size=+1><B>)</B></FONT>; }
         }
      } catch <FONT size=+1><B>(</B></FONT>Exception e<FONT size=+1><B>)</B></FONT> { e.printStackTrace<FONT size=+1><B>(</B></FONT><FONT size=+1><B>)</B></FONT>; }
      return picFormat;
   }
}
<!-- END: PicIn.java in HTML -->
</PRE>
<HR>
</BODY></HTML>
